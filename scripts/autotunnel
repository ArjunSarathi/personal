#!/bin/bash
LOG_FILE=$HOME/.jupyter.log
SERVER=${CS_SERVER:=royal-15.cs.wisc.edu}
USR=mwolff
TIMEOUT_SECONDS=15
SERVER_COMMAND='jupyter notebook'
[[ ! -z $1 ]] && folder=/$1  # user can supply a folder to connect to

white='\e[1;37m%-6s\e[m\n'
yellow='\e[1;33m%-6s\e[m\n'

printf $white "Connecting to $SERVER..."
current_notebooks=`sshpass -f ~/.clearance ssh $USR@$SERVER 'jupyter notebook list' 2>/dev/null`
printf $yellow "$current_notebooks" && echo

printf $white "Starting notebook..."
rm $LOG_FILE &>/dev/null; touch $LOG_FILE  # clean out log
sshpass -f ~/.clearance ssh $USR@$SERVER $SERVER_COMMAND &> $LOG_FILE &  # start it up

# start an exit counter; notebook must start up within that time or else exit
start_timer() { sleep $TIMEOUT_SECONDS && echo $'\nNotebook initialization timed out' && cat $LOG_FILE; }
stop_timer() { kill $timer_pid &>/dev/null; wait $! &>/dev/null; }
check_timer() { kill -s 0 $timer_pid &>/dev/null && { echo -n "."; sleep 0.5; }; }
notebook_inactive() { ! grep -q 'localhost:' $LOG_FILE; }
start_timer & timer_pid=$! 
while notebook_inactive; do 
  check_timer || exit 1   
done && echo 
stop_timer

# after notebook has started up, locate notebook information from log
tmp_port=`perl -nle "print $& if m{(?<=localhost:)[0-9]+}" $LOG_FILE | head -n1` 
notebook_link=`grep -oe 'http://localhost:.*' $LOG_FILE | head -1 | xargs`  # trim output
token=`grep -o "\?.*"<<< $notebook_link`

printf $white "Notebook is at $notebook_link"
printf $yellow "This notebook will not terminate with ctrl-c. You will need to go on $SERVER to kill it."
echo
printf $yellow 'KILLING NOTEBOOKS: ssh to server and call "top -U $USER" to see active processes.'
printf $yellow 'Find the corresponding process ID for your notebook and call "kill <ID>"' 
echo
sshpass -f ~/.clearance ssh -NfL localhost:$tmp_port:$SERVER:$tmp_port $USR@$SERVER 2>/dev/null # tunnel notebook to localhost
open http://localhost:$tmp_port/tree$folder$token
tail -n0 -f $LOG_FILE # maintain an output stream from the notebook that you can close without disconnecting notebook
